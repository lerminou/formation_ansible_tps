---
- name: Create flask user
  ansible.builtin.user:
    name: "{{ flask_user }}"
    state: present  

- name: Install flask packages
  ansible.builtin.package:
    name: "{{ app_yum_packages }}"
    state: present

- name: "Install flask repo {{ flask_repo }}"
  ansible.builtin.git:
    repo: "{{ flask_repo }}"
    dest: "{{ flask_home }}/{{ flask_app_name }}"
    update: yes 
    force: yes
  tags:
    - git

- name: "Change flash repo owner to {{ flask_user }} recursively"      
  ansible.builtin.file: 
    dest: "{{ flask_home }}/{{ flask_app_name }}"
    owner: "{{ flask_user }}"

- name: virtualenv setup
  block:

    - name: Setup pre-requisite pip3 packages
      ansible.builtin.pip:
        name: "{{ pip_dependencies }}"
        state: latest
        executable: /usr/bin/pip3

    - name: "Create virtualenv {{ virtualenv_name }} for Flask"
      ansible.builtin.pip:
        requirements: "{{ flask_home }}/{{ flask_app_name }}/requirements.txt"
        virtualenv: "{{ virtualenv_home }}/{{ flask_app_name }}"
        virtualenv_site_packages: no
        virtualenv_command: /opt/ansible/.venv/bin/virtualenv
  tags:
    - venv
    - virtualenv  
      
- name: "Generate {{ flask_app_name }} startup script"    
  ansible.builtin.template:
    src: demo_app.j2
    dest: /usr/local/bin/demo_app   
    mode: '0555'

- name: template systemd service config
  ansible.builtin.template:
    src: flask_service.j2
    dest: /etc/systemd/system/{{ flask_app_name }}.service
    mode: '0755'

- name: start systemd app service
  ansible.builtin.systemd: 
    name: "{{ flask_app_name }}.service"
    state: restarted 
    enabled: yes

